version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: sulwork_cafe_db
    environment:
      POSTGRES_DB: sulwork_cafe
      POSTGRES_USER: sulwork
      POSTGRES_PASSWORD: sulwork
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sulwork_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sulwork -d sulwork_cafe"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  backend:
    container_name: sulwork_cafe_backend
    build:
      context: ./backend
    ports:
      - "8080:8080"
    env_file:
      - ./backend/.env
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/sulwork_cafe
      SPRING_DATASOURCE_USERNAME: sulwork
      SPRING_DATASOURCE_PASSWORD: sulwork
      JAVA_TOOL_OPTIONS: "-Xms256m -Xmx512m"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/v3/api-docs > /dev/null || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 700m
        reservations:
          memory: 256m
    restart: unless-stopped
    networks:
      - sulwork_network

  frontend:
    container_name: sulwork_cafe_frontend
    build:
      context: ./frontend
    ports:
      - "4000:4000"
    environment:
      VITE_API_BASE: http://localhost:8080
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:4000/ > /dev/null || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 20s
    depends_on:
      backend:
        condition: service_started
    deploy:
      resources:
        limits:
          memory: 300m
        reservations:
          memory: 128m
    restart: unless-stopped
    networks:
      - sulwork_network

networks:
  sulwork_network:
    driver: bridge

volumes:
  postgres_data: